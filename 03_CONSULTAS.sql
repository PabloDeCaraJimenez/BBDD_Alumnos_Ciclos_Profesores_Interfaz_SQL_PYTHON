USE CENTRO_DOCENTE;

SELECT * FROM PROFESOR;
SELECT * FROM MODULO;
SELECT * FROM ALUMNO;
SELECT * FROM ALUMNO_CURSA_MODULO;
#--------------------------------------------------------------------- BUSCAR ID POR CODIGO
DROP FUNCTION IF EXISTS COD_TO_ID;
DELIMITER //
CREATE FUNCTION COD_TO_ID(miCOD CHAR(4))
RETURNS INT DETERMINISTIC
BEGIN
	RETURN (SELECT ID_MODULO FROM MODULO WHERE CODIGO = miCOD);
END //
DELIMITER ;
#------------------------------------------------------------------------ BUSCAR ID POR DNI
DROP FUNCTION IF EXISTS DNI_TO_ID;
DELIMITER //
CREATE FUNCTION DNI_TO_ID(miDNI CHAR(9))
RETURNS INT DETERMINISTIC
BEGIN
	RETURN (SELECT ID_ALUMNO FROM ALUMNO WHERE DNI = miDNI);
END //
DELIMITER ;
#-------------------------------------------------------------- MATRICULAR ALUMNO EN MODULO
DROP PROCEDURE IF EXISTS MATRICULACION;
DELIMITER //
CREATE PROCEDURE MATRICULACION(DNI CHAR(9), CODIGO CHAR(4))
BEGIN
	INSERT INTO ALUMNO_CURSA_MODULO (ID_ALUMNO, ID_MODULO)
    VALUES
		(DNI_TO_ID(DNI), COD_TO_ID(CODIGO));
END //
DELIMITER ;
#-------------------------------------------------------------------------- ELIMINAR ALUMNO
#DROP PROCEDURE IF EXISTS ELIMINAR_ALUMN;
#DELIMITER //
#CREATE PROCEDURE ELIMINAR_ALUMN (miDNI CHAR(9))
#BEGIN
#	DELETE FROM ALUMNO WHERE DNI = miDNI;
#END //
#DELIMITER ;
#---------------------------------------------------- VISTA MODULOS, PORFESORES, Nº ALUMNOS
CREATE OR REPLACE VIEW LISTA_DE_MODULOS AS
	SELECT
		MO.CODIGO AS `CÓDIGO`,
		MO.NOMBRE AS `MÓDULO`,
        MO.HORAS_DURACION AS `HORAS`,
		PR.NOMBRE AS `IMPARTE`,
		COUNT(DISTINCT AC.ID_ALUMNO) AS `ALUMNOS MATRICULADOS`
	FROM MODULO MO
	LEFT JOIN PROFESOR PR ON MO.ID_PROFESOR = PR.ID_PROFESOR
	LEFT JOIN ALUMNO_CURSA_MODULO AC ON MO.ID_MODULO = AC.ID_MODULO
	GROUP BY `MÓDULO`
	ORDER BY MO.ID_MODULO;
#----------------------------------------------------------------- PROCEDURE PAGINACIÓN (5)
DROP PROCEDURE IF EXISTS PAGINACION;
DELIMITER //
CREATE PROCEDURE PAGINACION(MI_OFFSET INT)
BEGIN
	SELECT
		APELLIDOS,
        NOMBRE,
        DNI,
        FECHA_NACIMIENTO,
        FLOOR(DATEDIFF(CURRENT_DATE , FECHA_NACIMIENTO)/365) AS EDAD,
        TELEFONO
    FROM ALUMNO LIMIT 5 OFFSET MI_OFFSET;
END //
DELIMITER ;

#----------------------------------------------------------------- COMPROBAR DNI REGISTRADO
DROP FUNCTION IF EXISTS COMPRUEBA_DNI;
DELIMITER //
CREATE FUNCTION COMPRUEBA_DNI(miDNI CHAR(9))
RETURNS BOOL DETERMINISTIC
BEGIN
	RETURN miDNI IN (SELECT DNI FROM ALUMNO);
END //
DELIMITER ;
#------------------------------------------------------------------ COMPROBAR EXISTE MÓDULO
DROP FUNCTION IF EXISTS COMPRUEBA_CODIGO
DELIMITER //
CREATE FUNCTION COMPRUEBA_CODIGO(miCODIGO CHAR(4))
RETURNS BOOL DETERMINISTIC
BEGIN
	RETURN miCODIGO IN (SELECT CODIGO FROM MODULO);
END //
DELIMITER ;











